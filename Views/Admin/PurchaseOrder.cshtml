@using Vendor_Indusuno.Extensions
@model Vendor_Indusuno.ViewModels.PurchaseOrderViewModel
@{
    ViewBag.Title = "Purchase Order";
    TempData["Purchase"] = "active";
    TempData["PurchaseOrders"] = "active";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    @{
        string actType = "Add";
        string actBtn = "Submit";
        string pageTitle = Html.Raw(Html.PageGTitle()) + "";
        if (!String.IsNullOrEmpty(Model.PurOrdModels.Id))
        {
            actType = "Edit";
            actBtn = "Update";
        }
    }
    <h1>
        @pageTitle
        <small></small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index")"><i class="fa fa-dashboard"></i> Home</a></li>
        @Html.Raw(Html.BuildBreadcrumbNavigation())
    </ol>
</section>
<!-- Main content -->
<section class="content">
    @using (Html.BeginForm("PurchaseOrder", "Admin", FormMethod.Post, new { id = "form_advanced_validation", autocomplete = "off", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <!-- Main row -->
        <div class="row">
            <div class="col-lg-12">
                <!-- Default box -->
                <div class="box">
                    <div class="box-header with-border">
                        <h3 class="box-title">@actType @pageTitle</h3>
                        <div class="box-tools pull-right">
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="col-md-12">
                            <div class="msgs">
                                @if (ViewData?.ModelState[""]?.Errors?.Any() == true)
                                {
                                    <div class="alert alert-danger alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-ban"></i> Error!</h4>
                                        @Html.ValidationSummary(true, "", new { @class = "" })
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(ViewBag.SucMsg))
                                {
                                    <div class="alert alert-success alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-check"></i> Success!</h4>
                                        <strong>Well done!</strong> @ViewBag.SucMsg
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(ViewBag.ErrMsg))
                                {
                                    <div class="alert alert-danger alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-ban"></i> Error!</h4>
                                        <strong>Oh snap!</strong> @ViewBag.ErrMsg
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(TempData["ErrMsg"] + ""))
                                {
                                    <div class="alert alert-danger alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-ban"></i> Error!</h4>
                                        <strong>Oh snap!</strong> @TempData["ErrMsg"]
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(TempData["SucMsg"] + ""))
                                {
                                    <div class="alert alert-success alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-check"></i> Success!</h4>
                                        <strong>Well done!</strong> @TempData["SucMsg"]
                                    </div>
                                }
                            </div>
                            @Html.HiddenFor(model => model.PurOrdModels.Id)
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.CustomerId, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.PurOrdModels.CustomerId, new SelectList(Model.CustomerModelList, "Key", "Value"),
                                        "--Select Customer--", new { @class = "form-control select2 cstid" })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.CustomerId, "",
                                new { @class = "text-danger errcstid" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.CustomerBillAdd, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.PurOrdModels.CustomerBillAdd, new SelectList(Model.CustomerBilAddModelList, "Key", "Value"),
                                        "--Customer Billing Address--", new { @class = "form-control select2 cstbadd" })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.CustomerBillAdd, "",
                                new { @class = "text-danger errcstbadd" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.CustomerShipAdd, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.PurOrdModels.CustomerShipAdd, new SelectList(Model.CustomerShipAddModelList, "Key", "Value"),
                                        "--Customer Shipping Address--", new { @class = "form-control select2 cstsadd" })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.CustomerShipAdd, "",
                                new { @class = "text-danger errcstsadd" })
                                    </div>
                                </div>
                                <div class="col-md-12 row">
                                    <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PurOrdModels.POType, new { @class = "form-control-label" })
                                            @Html.DropDownListFor(m => m.PurOrdModels.POType,
                                           new List<SelectListItem>
                                              {
                                                new SelectListItem{ Text="Regular", Value = "Regular", Selected = true  },
                                                new SelectListItem{ Text="Open PO", Value = "Open PO" },
                                                new SelectListItem{ Text="ARC", Value = "ARC" },
                                              },
                                            "--Select PO Type--", new { @class = "form-control select2 potype" })
                                            @Html.ValidationMessageFor(m => m.PurOrdModels.POType, "",
                                    new { @class = "text-danger errpotype" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PurOrdModels.POId, new { @class = "form-control-label" }) <sup>*</sup>
                                            @Html.TextBoxFor(m => m.PurOrdModels.POId,
                                    new
                                    {
                                        @class = "form-control text-capitalize poid",
                                        @readonly = true,
                                        placeholder = @Html.DisplayNameFor(m => m.PurOrdModels.POId)
                                    })
                                            @Html.ValidationMessageFor(m => m.PurOrdModels.POId, "",
                                    new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PurOrdModels.PONumber, new { @class = "form-control-label" }) <sup>*</sup>
                                            @Html.TextBoxFor(m => m.PurOrdModels.PONumber,
                                    new
                                    {
                                        @class = "form-control text-capitalize pono",
                                        placeholder = @Html.DisplayNameFor(m => m.PurOrdModels.PONumber)
                                    })
                                            @Html.ValidationMessageFor(m => m.PurOrdModels.PONumber, "",
                                    new { @class = "text-danger errpono" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PurOrdModels.LineItems, new { @class = "form-control-label" }) <sup>*</sup>
                                            @Html.TextBoxFor(m => m.PurOrdModels.LineItems,
                                    new
                                    {
                                        @class = "form-control polneitm",
                                        @type = "number",
                                        placeholder = @Html.DisplayNameFor(m => m.PurOrdModels.LineItems)
                                    })
                                            @Html.ValidationMessageFor(m => m.PurOrdModels.LineItems, "",
                                    new { @class = "text-danger errpolneitm" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PurOrdModels.OrderDate, new { @class = "form-control-label" }) <sup>*</sup>
                                            @Html.TextBoxFor(m => m.PurOrdModels.OrderDate,
                                    new
                                    {
                                        @class = "form-control poorddate datepicker",
                                        placeholder = @Html.DisplayNameFor(m => m.PurOrdModels.OrderDate)
                                    })
                                            @Html.ValidationMessageFor(m => m.PurOrdModels.OrderDate, "",
                                    new { @class = "text-danger errpoorddate" })
                                        </div>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PurOrdModels.ExpDlvDate, new { @class = "form-control-label" }) <sup>*</sup>
                                            @Html.TextBoxFor(m => m.PurOrdModels.ExpDlvDate,
                                    new
                                    {
                                        @class = "form-control poedlvdate datepicker",
                                        placeholder = @Html.DisplayNameFor(m => m.PurOrdModels.ExpDlvDate)
                                    })
                                            @Html.ValidationMessageFor(m => m.PurOrdModels.ExpDlvDate, "",
                                    new { @class = "text-danger errpoedlvdate" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <div class="col-lg-12">
                <!-- Default box -->
                <div class="box">
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.CstMtrlCode, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.PurOrdModels.CstMtrlCode,
                                new
                                {
                                    @class = "form-control cstmtrcd",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.PurOrdModels.CstMtrlCode)
                                })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.CstMtrlCode, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.SKUNo, new { @class = "form-control-label" })
                                        @Html.DropDownListFor(m => m.PurOrdModels.SKUNo, new SelectList(Model.SKUModelList, "Key", "Value"),
                                        "--Select SKU No--", new { @class = "form-control select2 skuno" })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.SKUNo, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.ProductId, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.PurOrdModels.ProductId,
                                new
                                {
                                    @class = "form-control text-capitalize prdid",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.PurOrdModels.ProductId)
                                })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.ProductId, "",
                                new { @class = "text-danger errprdid" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.ModelNo, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.PurOrdModels.ModelNo,
                                new
                                {
                                    @class = "form-control text-capitalize modelno",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.PurOrdModels.ModelNo)
                                })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.ModelNo, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.PrdCtgryId, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.PurOrdModels.PrdCtgryId, new SelectList(Model.ProductCategoryModelList, "Key", "Value"),
                                        "--Select Product Category--", new { @class = "form-control select2 prdctgid" })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.PrdCtgryId, "",
                                new { @class = "text-danger errprdctgid" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.BrandId, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.PurOrdModels.BrandId, new SelectList(Model.BrandModelList, "Key", "Value"),
                                        "--Select Brand--", new { @class = "form-control select2 brndid" })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.BrandId, "",
                                new { @class = "text-danger errbrndid" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.HSNCode, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.PurOrdModels.HSNCode,
                                new
                                {
                                    @class = "form-control text-capitalize hsncode",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.PurOrdModels.HSNCode)
                                })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.HSNCode, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.UnitId, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.PurOrdModels.UnitId, new SelectList(Model.UnitModelList, "Key", "Value"),
                                        "--Select Unit--", new { @class = "form-control select2 untid" })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.UnitId, "",
                                new { @class = "text-danger erruntid" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.SpcRemark, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.PurOrdModels.SpcRemark,
                                new
                                {
                                    @class = "form-control text-capitalize spcrmk",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.PurOrdModels.SpcRemark)
                                })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.SpcRemark, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.Quantity, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.PurOrdModels.Quantity,
                                new
                                {
                                    @class = "form-control text-capitalize qty",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.PurOrdModels.Quantity)
                                })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.Quantity, "",
                                new { @class = "text-danger errqty" })
                                    </div>
                                </div>
                                <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.Price, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.PurOrdModels.Price,
                                new
                                {
                                    @class = "form-control text-capitalize price",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.PurOrdModels.Price)
                                })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.Price, "",
                                new { @class = "text-danger errprice" })
                                    </div>
                                </div>
                                <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.GST, new { @class = "form-control-label" })
                                        @Html.DropDownListFor(m => m.PurOrdModels.GST,
                                       new List<SelectListItem>
                                          {
                                            new SelectListItem{ Text="0 %", Value = "0" },
                                            new SelectListItem{ Text="5 %", Value = "5" },
                                            new SelectListItem{ Text="12 %", Value = "12" },
                                            new SelectListItem{ Text="18 %", Value = "18", Selected = true  },
                                            new SelectListItem{ Text="28 %", Value = "28" },
                                          },
                                        "--Select GST %--", new { @class = "form-control select2 gst" })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.GST, "",
                                new { @class = "text-danger errgst" })
                                    </div>
                                </div>
                                <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PurOrdModels.Discount, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.PurOrdModels.Discount,
                                new
                                {
                                    @class = "form-control text-capitalize discount",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.PurOrdModels.Discount)
                                })
                                        @Html.ValidationMessageFor(m => m.PurOrdModels.Discount, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer">
                        <div class="col-md-12">
                            <div class="box-tools pull-left">
                                <a href="javascript:void(0)" class="btn bg-aqua" id="addtemppoline">ADD</a>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-footer-->
                </div>
                <!-- /.box -->
            </div>

            <div class="col-lg-12">
                <!-- Default box -->
                <div class="box">
                    <div class="box-header with-border">
                        <h3 class="box-title">@pageTitle List</h3>
                        <div class="box-tools pull-right">
                        </div>
                    </div>
                    <div class="box-body">
                        <table id="tblTempPOLine" class="tbl table table-bordered display nowrap">
                            <thead>
                                <tr>
                                    @*<th>SNo.</th>*@
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().CstMtrlCode)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().SKUNo)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().ProductId)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().ModelNo)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().PrdCtgryId)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().BrandId)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().HSNCode)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().UnitId)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().SpcRemark)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().Quantity)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().Price)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().GST)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurOrdModelList.FirstOrDefault().Discount)</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="table-body">
                            </tbody>
                        </table>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-body">
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.PurOrdModels.POSentBy, new { @class = "form-control-label" }) <sup>*</sup>
                                @Html.DropDownListFor(m => m.PurOrdModels.POSentBy, new SelectList(Model.UserModelList, "Key", "Value"),
                                "--Select Send By--", new { @class = "form-control select2 posentby" })
                                @Html.ValidationMessageFor(m => m.PurOrdModels.POSentBy, "",
                        new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.PurOrdModels.POFile, new { @class = "form-control-label" }) <sup>*</sup>
                                @Html.TextBoxFor(m => m.PurOrdModels.POFile,
                        new
                        {
                            @class = "form-control pofile",
                            @type = "file",
                            placeholder = "Enter " + @Html.DisplayNameFor(m => m.PurOrdModels.POFile)
                        })
                                @Html.ValidationMessageFor(m => m.PurOrdModels.POFile, "",
                        new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <button name="@actBtn.ToLower()" id="posubmit" class="btn bg-aqua posubmit" title="@actBtn"
                                    value="@actBtn">
                                @actBtn.ToUpper()
                            </button>
                        </div>
                    </div>
                </div>
                <!-- /.box -->
            </div>
        </div>
        <!-- danger with sound -->
        <div class="message-box animated fadeIn" data-sound="alert" id="mb-act-cnfrm">
            <div class="mb-container">
                <div class="mb-middle">
                    <div class="mb-title"><span class="fa fa-warning"></span> Confirm <strong>Box</strong> ?</div>
                    <div class="mb-content">
                        <p>Are you sure you want to delete?</p>
                        <p>Press No if you want to Cancel. Press Yes to Delete the record.</p>
                    </div>
                    <div class="mb-footer">
                        <div class="pull-right">
                            <a id="confirmhref" href="#" class="btn btn-confirm-yes btn-lg">Yes</a>
                            <button class="btn btn-confirm-no btn-lg mb-control-close">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- end danger with sound -->
        <!-- /.row (main row) -->
        <!-- Modal -->
        @*<div class="modal fade" id="modalAddBranch" style="display: none;">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                            <h4 class="modal-title">Default Modal</h4>
                        </div>
                        <div class="modal-body">
                            <p>One fine body…</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary">Save changes</button>
                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>*@
    }
</section>
@*<script type="text/javascript">
        function ShowImagePreview(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imgCropped').val(e.target.result);
                    $('#Img_Box').attr('src', e.target.result)
                        .width(40)
                        .height(auto);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>*@
<!-- /.content -->

@using Vendor_Indusuno.Extensions
@model Vendor_Indusuno.ViewModels.EnquiryStatusViewModel
@{
    ViewBag.Title = "Enquiry Status";
    TempData["Enquiry"] = "active";
    TempData["EnquiryStatus"] = "active";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    @{
        string pageTitle = Html.Raw(Html.PageGTitle()) + "";
    }
    <h1>
        @pageTitle
        <small></small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index")"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        @Html.Raw(Html.BuildBreadcrumbNavigation())
        @*<li class="active">Dashboard</li>*@
    </ol>
</section>
<!-- Main content -->
<section class="content">
    @using (Html.BeginForm("EnquiryStatus", "Admin", FormMethod.Post, new { id = "form_advanced_validation", autocomplete = "off", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <!-- Main row -->
        <div class="row">
            <div class="col-lg-12">
                <!-- Default box -->
                <div class="box">
                    <div class="box-header with-border">
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Search, new { @class = "form-control-label" })
                                @Html.TextBoxFor(m => m.Search,
                                new
                                {
                                    @class = "form-control text-capitalize",
                                    placeholder = @Html.DisplayNameFor(m => m.Search)
                                })
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.StartDate, new { @class = "form-control-label" }) <sup>*</sup>
                                @Html.TextBoxFor(m => m.StartDate,
                                new
                                {
                                    @class = "form-control datepicker",
                                    placeholder = @Html.DisplayNameFor(m => m.StartDate)
                                })
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.EndDate, new { @class = "form-control-label" }) <sup>*</sup>
                                @Html.TextBoxFor(m => m.EndDate,
                                new
                                {
                                    @class = "form-control datepicker",
                                    placeholder = @Html.DisplayNameFor(m => m.EndDate)
                                })
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Type, new { @class = "form-control-label" })
                                @Html.DropDownListFor(m => m.Type,
                               new List<SelectListItem>
                                  {
                                    new SelectListItem{ Text="STANDARD", Value = "STANDARD" },
                                    new SelectListItem{ Text="NON STANDARD", Value = "NON STANDARD" },
                                  },
                                "--Select Type--", new { @class = "form-control select2" })
                            </div>
                        </div>
                            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Customer, new { @class = "form-control-label" })
                                    @Html.DropDownListFor(m => m.Customer, new SelectList(Model.CustomerModelList, "Key", "Value"),
                                    "--Select Customer--", new { @class = "form-control select2 cstid" })
                                    @Html.ValidationMessageFor(m => m.Customer, "",
                            new { @class = "text-danger errcstid" })
                                </div>
                            </div>
                            @if (Model.UserProfileModels.EmpType != "User")
                            {
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.User, new { @class = "form-control-label" })
                                        @Html.DropDownListFor(m => m.User, new SelectList(Model.UserModelList, "Key", "Value"),
                                        "--Select User--", new { @class = "form-control select2 posentby" })
                                        @Html.ValidationMessageFor(m => m.User, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.EnquiryType, new { @class = "form-control-label" })
                                    @Html.DropDownListFor(m => m.EnquiryType,
                                   new List<SelectListItem>
                                      {
                                        new SelectListItem{ Text="PENDING", Value = "PENDING" },
                                        new SelectListItem{ Text="QUOTED", Value = "QUOTED", Selected = true },
                                        new SelectListItem{ Text="REGRET", Value = "REGRET" },
                                        new SelectListItem{ Text="HOLD", Value = "HOLD" },
                                      },
                                    "--Select Enquiry Type--", new { @class = "form-control select2" })
                                    @Html.ValidationMessageFor(m => m.EnquiryType, "", new { @class = "text-danger errpotype" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="box-tools pull-left">
                                    <button type="submit" name="search" class="btn bg-aqua" title="SEARCH"
                                            value="search">
                                        SEARCH
                                    </button>
                                </div>
                            </div>
                        
                        <div class="col-md-12">
                            @if (Model.UserProfileModels.EmpType == "Administrator" || Model.UserProfileModels.EmpType == "SupAdmin" || Model.UserProfileModels.IsAdminRight == true)
                            {
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Status, new { @class = "form-control-label" })
                                        @Html.DropDownListFor(m => m.Status,
                                       new List<SelectListItem>
                                          {
                                            new SelectListItem{ Text="OPEN", Value = "OPEN" },
                                            new SelectListItem{ Text="CLOSED", Value = "CLOSED" },
                                          },
                                        "--Select Status--", new { @class = "form-control enqsts select2" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="col-md-8">
                                        <textarea class="float-right form-control stsrmk" placeholder="Enter Status Remarks"></textarea>
                                    </div>
                                    <div class="col-md-4 float-right">
                                        <a href="javascript:void(0)" class="btn bg-red btn-edt float-right enqstssubmit" id="enqstssubmit">SUBMIT</a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-body">
                        <table id="tblEnquiryStatus" class="table table-bordered display">
                            <thead>
                                <tr>
                                    <th><input type="checkbox" id="seallasnpo" /></th>
                                    <th>SNo</th>
                                    @*<th hidden></th>*@
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().CustomerName)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().EnqId)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().EnqPId)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Product)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Brand)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().ModelNo)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Vendor1Id)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Vendor1Price)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Vendor1Discount)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Vendor2Id)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Vendor2Price)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Vendor2Discount)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Vendor3Id)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Vendor3Price)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Vendor3Discount)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Type)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().EnqType)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Quantity)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().Price)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().TotalPrice)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().EnquiryDate)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().EndDate)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().EnqADate)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().TAT)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().EnqAssignTo)</th>
                                    <th>@Html.DisplayNameFor(model => model.EnquiriesModelList.FirstOrDefault().CurrentStage)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.EnquiriesModelList)
                                {
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        @*<td hidden></td>*@
                                        <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.EnqId)</td>
                                        <td>@Html.DisplayFor(modelItem => item.EnqPId)</td>
                                        <td title="@item.SpcRemark">
                                            @Html.DisplayFor(modelItem => item.Product)<br>
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.Brand)</td>
                                        <td>@Html.DisplayFor(modelItem => item.ModelNo)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Vendor1Id)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Vendor1Price)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Vendor1Discount) %</td>
                                        <td>@Html.DisplayFor(modelItem => item.Vendor2Id)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Vendor2Price)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Vendor2Discount) %</td>
                                        <td>@Html.DisplayFor(modelItem => item.Vendor3Id)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Vendor3Price)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Vendor3Discount) %</td>
                                        <td>@Html.DisplayFor(modelItem => item.Type)</td>
                                        <td>@Html.DisplayFor(modelItem => item.EnqType)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                                        <td>@Html.DisplayFor(modelItem => item.TotalPrice)</td>
                                        <td>@Html.DisplayFor(modelItem => item.EnquiryDate)</td>
                                        <td>@Html.DisplayFor(modelItem => item.EndDate)</td>
                                        <td>@Html.DisplayFor(modelItem => item.EnqADate)</td>
                                        <td>@Html.DisplayFor(modelItem => item.TAT)</td>
                                        <td>@Html.DisplayFor(modelItem => item.EnqAssignTo)</td>
                                        <td>@Html.DisplayFor(modelItem => item.CurrentStage)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- /.box -->
                </div>
            </div>
        </div>
        <!-- danger with sound -->
        <div class="message-box animated fadeIn" data-sound="alert" id="mb-act-cnfrm">
            <div class="mb-container">
                <div class="mb-middle">
                    <div class="mb-title"><span class="fa fa-warning"></span> Confirm <strong>Box</strong> ?</div>
                    <div class="mb-content">
                        <p>Are you sure you want to not approve?</p>
                        <p>Press No if you want to Cancel. Press Yes to not Approve the record.</p>
                        <div class="col-md-12 m-t-20">
                            <div class="form-group">
                                <label class="control-label">Remark</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="fa fa-id-badge"></span></span>
                                    @Html.TextAreaFor(model => model.EnquiryModels.SpcRemark, new { @class = "form-control", type = "text" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EnquiryModels.SpcRemark, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="mb-footer">
                        <div class="pull-right">
                            <a id="confirmhref" href="#" class="btn btn-confirm-yes btn-lg">Yes</a>
                            <button class="btn btn-confirm-no btn-lg mb-control-close">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- end danger with sound -->
    }
</section>
<!-- /.content -->

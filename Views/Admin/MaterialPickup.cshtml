@using Vendor_Indusuno.Extensions
@model Vendor_Indusuno.ViewModels.MaterialPickupViewModel
@{
    ViewBag.Title = "Material Pickup";
    TempData["Operations"] = "active";
    TempData["MaterialPickup"] = "active";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    @{
        string pageTitle = Html.Raw(Html.PageGTitle()) + "";
    }
    <h1>
        @pageTitle
        <small></small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index")"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        @Html.Raw(Html.BuildBreadcrumbNavigation())
        @*<li class="active">Dashboard</li>*@
    </ol>
</section>
<!-- Main content -->
<section class="content">
    @using (Html.BeginForm("MaterialPickup", "Admin", FormMethod.Post, new { id = "form_advanced_validation", autocomplete = "off", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <!-- Main row -->
        <div class="row">
            <div class="col-lg-12">
                <!-- Default box -->
                <div class="box">
                    <!-- /.box-body -->
                    <div class="box-body">
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Search, new { @class = "form-control-label" }) <sup>*</sup>
                                @Html.TextBoxFor(m => m.Search,
                                new
                                {
                                    @class = "form-control text-capitalize",
                                    placeholder = @Html.DisplayNameFor(m => m.Search)
                                })
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.StartDate, new { @class = "form-control-label" }) <sup>*</sup>
                                @Html.TextBoxFor(m => m.StartDate,
                                new
                                {
                                    @class = "form-control datepicker",
                                    placeholder = @Html.DisplayNameFor(m => m.StartDate)
                                })
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.EndDate, new { @class = "form-control-label" }) <sup>*</sup>
                                @Html.TextBoxFor(m => m.EndDate,
                                new
                                {
                                    @class = "form-control datepicker",
                                    placeholder = @Html.DisplayNameFor(m => m.EndDate)
                                })
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="box-tools pull-left">
                                <button type="submit" name="search" class="btn bg-aqua" title="SEARCH"
                                        value="search">
                                    SEARCH
                                </button>
                            </div>
                        </div>
                        <table id="tblMaterialPickup" class="table table-bordered display">
                            <thead>
                                <tr>
                                    <th>SNo</th>
                                    <th>@Html.DisplayNameFor(model => model.PurchaseOrdersModelList.FirstOrDefault().OrderDate)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurchaseOrdersModelList.FirstOrDefault().CustomerName)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurchaseOrdersModelList.FirstOrDefault().PONumber)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurchaseOrdersModelList.FirstOrDefault().POId)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurchaseOrdersModelList.FirstOrDefault().VPONumber)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurchaseOrdersModelList.FirstOrDefault().VendorId)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurchaseOrdersModelList.FirstOrDefault().VendorPrice)</th>
                                    <th>@Html.DisplayNameFor(model => model.PurchaseOrdersModelList.FirstOrDefault().Status)</th>
                                    @if (Model.UserProfileModels.EmpType != "User")
                                    {
                                        <th>View</th>
                                    }

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.PurchaseOrdersModelList)
                                {
                                <tr>
                                    <td></td>
                                    <td>@Html.DisplayFor(modelItem => item.OrderDate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PONumber)</td>
                                    @*<td><a href='~/Content/upload/poupload/@item.POFile' target="_blank">@item.PONumber</a></td>*@
                                    <td>
                                        @Html.EncodedActionLink(item.POId, "PODetails", "Admin", new { id = item.VPONumber }, new { @class = "", title = "Edit", @target = "_blank" })

                                    </td>
                                    <td>
                                        @Html.EncodedActionLink(item.VPONumber, "DownloadPO", "Admin", new { id = item.VPONumber }, new { @class = "", title = "Download", @target = "_blank" })
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.VendorId)</td>
                                    <td>@Html.DisplayFor(modelItem => item.VendorPrice)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                    @if (Model.UserProfileModels.EmpType == "Administrator" || Model.UserProfileModels.EmpType == "SupAdmin" || Model.UserProfileModels.IsAdminRight == true)
                                    {
                                        <td>
                                            @Html.EncodedActionLink("Receive", "MaterialReceive", "Admin",
                                                new { id = item.VPONumber }, new { @class = "btn btn-edt bg-aqua btn-sm", @target = "_blank", title = "Receive" })
                                        </td>
                                    }
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- /.box -->
                </div>
            </div>
        </div>
        <!-- danger with sound -->
        <div class="message-box animated fadeIn" data-sound="alert" id="mb-sub-confirm">
            <div class="mb-container">
                <div class="mb-middle">
                    <div class="mb-title"><span class="fa fa-warning"></span> Confirm <strong>Box</strong> ?</div>
                    <div class="mb-content">
                        <p>Are you sure you want to submit?</p>
                        <p>Press No if you want to Cancel. Press Yes to Submit the record.</p>
                    </div>
                    <div class="mb-footer">
                        <div class="pull-right">
                            <button name="posubmit" class="btn btn-confirm-yes btn-lg" title="Yes">
                                Yes
                            </button>
                            <button class="btn btn-confirm-no btn-lg mb-control-close">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- end danger with sound -->
    }
</section>
<!-- /.content -->

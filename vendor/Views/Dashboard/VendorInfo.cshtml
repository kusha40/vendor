@using Vendor_Indusuno.Extensions
@model Vendor_Indusuno.ViewModels.VendorInfoViewModel
@{
    ViewBag.Title = "Vendor Information";
    TempData["VendorInfo"] = "active";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    @{
        string actType = "Add";
        string actBtn = "Submit";
        string pageTitle = Html.Raw(Html.PageTitle()) + "";
        if (!String.IsNullOrEmpty(Model.VendorInfoModels.Id))
        {
            actType = "Edit";
            actBtn = "Update";
        }
    }
    <h1>
        @pageTitle
        <small></small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index")"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        @Html.Raw(Html.BuildBreadcrumbNavigation())
    </ol>
</section>
<!-- Main content -->
<section class="content">
    @using (Html.BeginForm("VendorInfo", "Dashboard", FormMethod.Post, new { id = "form_advanced_validation", autocomplete = "off", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <!-- Main row -->
        <div class="row">
            <div class="col-lg-12">
                <!-- Default box -->
                <div class="box">
                    <div class="box-header with-border">
                        <h3 class="box-title">@actType @pageTitle</h3>
                        <div class="box-tools pull-right">
                            @*<button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                                        title="Collapse">
                                    <i class="fa fa-minus"></i>
                                </button>*@
                            @*<button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                                    <i class="fa fa-times"></i>
                                </button>*@
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="col-md-12">
                            <div class="msgs">
                                @if (ViewData?.ModelState[""]?.Errors?.Any() == true)
                                {
                                    <div class="alert alert-danger alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-ban"></i> Error!</h4>
                                        @Html.ValidationSummary(true, "", new { @class = "float-left" })
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(ViewBag.SucMsg))
                                {
                                    <div class="alert alert-success alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-check"></i> Success!</h4>
                                        <strong>Well done!</strong> @ViewBag.SucMsg
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(ViewBag.ErrMsg))
                                {
                                    <div class="alert alert-danger alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-ban"></i> Error!</h4>
                                        <strong>Oh snap!</strong> @ViewBag.ErrMsg
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(TempData["ErrMsg"] + ""))
                                {
                                    <div class="alert alert-danger alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-ban"></i> Error!</h4>
                                        <strong>Oh snap!</strong> @TempData["ErrMsg"]
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(TempData["SucMsg"] + ""))
                                {
                                    <div class="alert alert-success alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-check"></i> Success!</h4>
                                        <strong>Well done!</strong> @TempData["SucMsg"]
                                    </div>
                                }
                            </div>
                            @Html.HiddenFor(model => model.VendorInfoModels.Id)
                            @Html.HiddenFor(model => model.VendorInfoModels.VendorCode)
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.CompanyName, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.VendorInfoModels.CompanyName,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.VendorInfoModels.CompanyName)
                                })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.CompanyName, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.Email, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.VendorInfoModels.Email,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.VendorInfoModels.Email)
                                })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.Email, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.Contact1, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.VendorInfoModels.Contact1,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.VendorInfoModels.Contact1)
                                })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.Contact1, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.Contact2, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.VendorInfoModels.Contact2,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.VendorInfoModels.Contact2)
                                })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.Contact2, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.ContactPerson, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.VendorInfoModels.ContactPerson,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.VendorInfoModels.ContactPerson)
                                })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.ContactPerson, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.Fax, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.VendorInfoModels.Fax,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.VendorInfoModels.Fax)
                                })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.Fax, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.WebsiteURL, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.VendorInfoModels.WebsiteURL,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.VendorInfoModels.WebsiteURL)
                                })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.WebsiteURL, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.City, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.VendorInfoModels.City,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.VendorInfoModels.City)
                                })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.City, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.State, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.VendorInfoModels.State,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.VendorInfoModels.State)
                                })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.State, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.WarehouseCode, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.WarehouseCode, new SelectList(Model.WarehouseModelList, "Key", "Value"),
                                        "--Select Warehouse--", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.WarehouseCode, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.Brand, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.VendorInfoModels.Brand,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.VendorInfoModels.Brand)
                                })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.Brand, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.Category, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.Category, new SelectList(Model.CategoryModelList, "Key", "Value"),
                    "--Select Category--", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.Category, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.OperationsModel, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.OperationsModel, new SelectList(Model.OperationModelList, "Key", "Value"),
                    "Select Operations Model", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.OperationsModel, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.TradeType, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.TradeType, new SelectList(Model.TradeTypeModelList, "Key", "Value"),
                    "Select Trade Type", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.TradeType, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.DeliveryMode, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.DeliveryMode, new SelectList(Model.DeliveryModeModelList, "Key", "Value"),
                    "Select Delivery Mode", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.DeliveryMode, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.LegalStatus, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.LegalStatus, new SelectList(Model.LegalStatusModelList, "Key", "Value"),
                    "Select Legal Status", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.LegalStatus, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.AcceptReturns, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.AcceptReturns, new SelectList(Model.AcceptReturnsModelList, "Key", "Value"),
                    "Select Accept Returns", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.AcceptReturns, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.PaymentTerms, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.PaymentTerms, new SelectList(Model.PaymentTermModelList, "Key", "Value"),
                    "Select Payment Terms", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.PaymentTerms, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.PackagingTerms, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.PackagingTerms, new SelectList(Model.PackagingTermModelList, "Key", "Value"),
                    "Select Packaging Terms", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.PackagingTerms, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.InvoicingTerms, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.InvoicingTerms, new SelectList(Model.InvoicingTermModelList, "Key", "Value"),
                    "Select Invoicing Terms", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.InvoicingTerms, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.SellerPanelUsage, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.SellerPanelUsage, new SelectList(Model.SellerPanelUsageModelList, "Key", "Value"),
                    "Select Seller Panel Usage", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.SellerPanelUsage, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.VendorSource, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.DropDownListFor(m => m.VendorInfoModels.VendorSource, new SelectList(Model.VendorSourceModelList, "Key", "Value"),
                    "Select Vendor Source", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.VendorSource, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VendorInfoModels.CompanyLogo, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.VendorInfoModels.CompanyLogo,
                                       new { @type = "file", @class = "form-control input-file" })
                                        @Html.ValidationMessageFor(m => m.VendorInfoModels.CompanyLogo, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
            <label>
                Agreement<br>
                @Html.CheckBoxFor(m => m.VendorInfoModels.Agreement, new { @class = "icheckbox_flat-green" })
            </label>
            @Html.ValidationMessageFor(m => m.VendorInfoModels.Agreement, "",
        new { @class = "text-danger" })
        </div>*@
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer">
                        <div class="col-md-12">
                            <div class="box-tools pull-left">
                                <button type="submit" name="@actBtn.ToLower()" class="btn bg-aqua" title="@actBtn"
                                        value="@actBtn">
                                    @actBtn.ToUpper()
                                </button>
                                @*@if (String.IsNullOrEmpty(Model.UOMModels.Id))
                                    {

                                        <button type="submit" name="submit" class="btn btn-primary" title="Submit"
                                                value="Submit">
                                            SUBMIT
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="submit" name="update" class="btn btn-primary" title="Update"
                                                value="Update">
                                            UPDATE
                                        </button>
                                    }*@
                            </div>
                            @*<div class="box-tools pull-right">
                                    <button type="submit" name="reset" class="btn btn-clear cancel" title="Reset"
                                            value="reset" formnovalidate="formnovalidate">
                                        RESET
                                    </button>
                                </div>*@
                        </div>
                    </div>
                    <!-- /.box-footer-->
                </div>
                <!-- /.box -->
            </div>
        </div>
        <!-- danger with sound -->
        <div class="message-box animated fadeIn" data-sound="alert" id="mb-act-cnfrm">
            <div class="mb-container">
                <div class="mb-middle">
                    <div class="mb-title"><span class="fa fa-warning"></span> Confirm <strong>Box</strong> ?</div>
                    <div class="mb-content">
                        <p>Are you sure you want to delete?</p>
                        <p>Press No if you want to Cancel. Press Yes to Delete the record.</p>
                    </div>
                    <div class="mb-footer">
                        <div class="pull-right">
                            <a id="confirmhref" href="#" class="btn btn-confirm-yes btn-lg">Yes</a>
                            <button class="btn btn-confirm-no btn-lg mb-control-close">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- end danger with sound -->
    }
</section>
<!-- /.content -->

@using Vendor_Indusuno.Extensions
@model Vendor_Indusuno.ViewModels.StaffViewModel

@{
    ViewBag.Title = "Staff";
    TempData["StaffSec"] = "active";
    TempData["Staff"] = "active";
    Layout = "~/Views/Shared/_LayoutDesk.cshtml";
}


<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @Html.Raw(Html.PageTitle())
        <small></small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index")"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        @Html.Raw(Html.BuildBreadcrumbNavigation())
        @*<li class="active">Dashboard</li>*@
    </ol>
</section>
<!-- Main content -->
<section class="content">
    @using (Html.BeginForm("Staff", "Desk", FormMethod.Post, new { id = "form_advanced_validation", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        <!-- Main row -->
        <div class="row">
            <div class="col-lg-12">
                <!-- Default box -->
                <div class="box">
                    <div class="box-header with-border">
                        <h3 class="box-title">Add/Edit Staff Info</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                                    title="Collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                            @*<button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                                    <i class="fa fa-times"></i>
                                </button>*@
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="col-md-12">
                            <div class="msgs">
                                @if (ViewData?.ModelState[""]?.Errors?.Any() == true)
                                {
                                    <div class="alert alert-danger alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-ban"></i> Error!</h4>
                                        @Html.ValidationSummary(true, "", new { @class = "float-left" })
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(ViewBag.SucMsg))
                                {
                                    <div class="alert alert-success alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-check"></i> Success!</h4>
                                        <strong>Well done!</strong> @ViewBag.SucMsg
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(TempData["ErrMsg"] + ""))
                                {
                                    <div class="alert alert-danger alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-ban"></i> Error!</h4>
                                        <strong>Oh snap!</strong> @TempData["ErrMsg"]
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(TempData["SucMsg"] + ""))
                                {
                                    <div class="alert alert-success alert-dismissible">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                        <h4><i class="icon fa fa-check"></i> Success!</h4>
                                        <strong>Well done!</strong> @TempData["SucMsg"]
                                    </div>
                                }
                            </div>
                            @Html.HiddenFor(model => model.UserProfileModels.Id)
                            @Html.HiddenFor(model => model.Act)
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <p class="lead">Staff </p>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.UserProfileModels.StaffCode, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.UserProfileModels.StaffCode,
                                new
                                {
                                    @class = "form-control text-capitalize",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.UserProfileModels.StaffCode)
                                })
                                        @Html.ValidationMessageFor(m => m.UserProfileModels.StaffCode, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.UserProfileModels.Name, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.UserProfileModels.Name,
                                new
                                {
                                    @class = "form-control text-capitalize",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.UserProfileModels.Name)
                                })
                                        @Html.ValidationMessageFor(m => m.UserProfileModels.Name, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.UserProfileModels.Designation, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.UserProfileModels.Designation,
                                new
                                {
                                    @class = "form-control text-capitalize",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.UserProfileModels.Designation)
                                })
                                        @Html.ValidationMessageFor(m => m.UserProfileModels.Designation, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.UserProfileModels.MobileNo1, new { @class = "form-control-label" }) <sup>*</sup>
                                        @Html.TextBoxFor(m => m.UserProfileModels.MobileNo1,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.UserProfileModels.MobileNo1)
                                })
                                        @Html.ValidationMessageFor(m => m.UserProfileModels.MobileNo1, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.UserProfileModels.MobileNo2, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.UserProfileModels.MobileNo2,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.UserProfileModels.MobileNo2)
                                })
                                        @Html.ValidationMessageFor(m => m.UserProfileModels.MobileNo2, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.UserProfileModels.Email, new { @class = "form-control-label" })
                                        @Html.TextBoxFor(m => m.UserProfileModels.Email,
                                new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.UserProfileModels.Email)
                                })
                                        @Html.ValidationMessageFor(m => m.UserProfileModels.Email, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.UserProfileModels.ProfileImage, new { @class = "form-control-label" })
                                        @*@Html.TextBoxFor(m => m.UserProfileModels.ProfileImage,
                new
                {
                    @class = "form-control text-capitalize",
                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.UserProfileModels.ProfileImage)
                })*@

                                        @Html.TextBoxFor(m => m.UserProfileModels.ProfileImage, new { @class = "form-control-file", @type = "file" })
                                        @Html.ValidationMessageFor(m => m.UserProfileModels.ProfileImage, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.UserProfileModels.IdentityCard, new { @class = "form-control-label" })
                                        @*@Html.TextBoxFor(m => m.UserProfileModels.IdentityCard,
                new
                {
                    @class = "form-control text-capitalize",
                    placeholder = "Enter " + @Html.DisplayNameFor(m => m.UserProfileModels.IdentityCard)
                })*@

                                        @Html.TextBoxFor(m => m.UserProfileModels.IdentityCard, new { @class = "form-control-file", @type = "file" })
                                        @Html.ValidationMessageFor(m => m.UserProfileModels.IdentityCard, "",
                                new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer">
                        <div class="col-md-12">
                            <div class="box-tools pull-left">
                                @if (String.IsNullOrWhiteSpace(Model.UserProfileModels.Id))
                                {

                                    <button type="submit" name="submit" class="btn btn-primary" title="Submit"
                                            value="Submit">
                                        SUBMIT
                                    </button>
                                }
                                else
                                {
                                    <button type="submit" name="update" class="btn btn-primary" title="Update"
                                            value="Update">
                                        UPDATE
                                    </button>
                                }
                            </div>
                            <div class="box-tools pull-right">
                                <button type="submit" name="reset" class="btn btn-clear cancel" title="Reset"
                                        value="reset" formnovalidate="formnovalidate">
                                    RESET
                                </button>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-footer-->
                </div>
                <!-- /.box -->
            </div>
            <div class="col-lg-12">
                <!-- Default box -->
                <div class="box">
                    <div class="box-header with-border">
                        <h3 class="box-title">Staff List</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                                    title="Collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                            @*<button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                                    <i class="fa fa-times"></i>
                                </button>*@
                        </div>
                    </div>
                    <div class="box-body">
                        <table id="Stafflist" class="table table-bordered display nowrap">
                            <thead>
                                <tr>
                                    <th>SNo.</th>
                                    <th>Action</th>
                                    <th>@Html.DisplayNameFor(model => model.UserProfileModelList.FirstOrDefault().StaffCode)</th>
                                    <th>@Html.DisplayNameFor(model => model.UserProfileModelList.FirstOrDefault().Name)</th>
                                    <th>@Html.DisplayNameFor(model => model.UserProfileModelList.FirstOrDefault().Designation)</th>
                                    <th>@Html.DisplayNameFor(model => model.UserProfileModelList.FirstOrDefault().MobileNo1)</th>
                                    <th>@Html.DisplayNameFor(model => model.UserProfileModelList.FirstOrDefault().MobileNo2)</th>
                                    <th>@Html.DisplayNameFor(model => model.UserProfileModelList.FirstOrDefault().Email)</th>
                                    <th>@Html.DisplayNameFor(model => model.UserProfileModelList.FirstOrDefault().ProfileImage)</th>
                                    <th>@Html.DisplayNameFor(model => model.UserProfileModelList.FirstOrDefault().IdentityCard)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.UserProfileModelList)
                                {
                                <tr>
                                    <td></td>
                                    <td>
                                        @Html.EncodedActionLink("<i class='fa fa-pencil-square-o'></i>", "EditStaff", "SODesk", new { id = item.Id, act = 1 }, new { @class = "btn btn-edt", title = "Edit" })
                                        @Html.EncodedActionLink("<i class='fa fa-times'></i>", "DeleteStaff", "SODesk", new { id = item.Id }, new { data_box = "#mb-act-cnfrm", @class = "btn btn-del m-l-5 mb-act-confirm", title = "Delete" })
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.StaffCode)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Designation)</td>
                                    <td>@Html.DisplayFor(modelItem => item.MobileNo1)</td>
                                    <td>@Html.DisplayFor(modelItem => item.MobileNo2)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ProfileImage)</td>
                                    <td>@Html.DisplayFor(modelItem => item.IdentityCard)</td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
        </div>
        <!-- danger with sound -->
        <div class="message-box animated fadeIn" data-sound="alert" id="mb-act-cnfrm">
            <div class="mb-container">
                <div class="mb-middle">
                    <div class="mb-title"><span class="fa fa-warning"></span> Confirm <strong>Box</strong> ?</div>
                    <div class="mb-content">
                        <p>Are you sure you want to delete?</p>
                        <p>Press No if you want to Cancel. Press Yes to Delete the record.</p>
                    </div>
                    <div class="mb-footer">
                        <div class="pull-right">
                            <a id="confirmhref" href="#" class="btn btn-confirm-yes btn-lg">Yes</a>
                            <button class="btn btn-confirm-no btn-lg mb-control-close">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- end danger with sound -->
        <!-- /.row (main row) -->
        <!-- Modal -->
        @*<div class="modal fade" id="modalAddStaff" style="display: none;">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                            <h4 class="modal-title">Default Modal</h4>
                        </div>
                        <div class="modal-body">
                            <p>One fine body…</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary">Save changes</button>
                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>*@
    }
</section>
<!-- /.content -->
